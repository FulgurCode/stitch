package user

import (
    "fmt"

    "github.com/FulgurCode/stitch/view/layout"
    "github.com/FulgurCode/stitch/models"
)

templ Item(product models.Product, stock map[string]int) {
    @layout.User() {
        <link rel="stylesheet" href="/static/styles/user/item.css">
        <script src="/static/scripts/shirt-size.js"></script>
        <div class={Container()}>

        @ImageCarousel(product)
        <div class="description-container">
            <span style="gap: 0">
                <p class="no-line-height">Shop name</p>
                <h1 style="font-weight: 600;" class="no-line-height">{product.Name}</h1>
            </span>
            <span style="gap: 2px;">
                <p style="font-weight: 600;" class="no-line-height">&#8360;. {fmt.Sprintf("%d",product.Price)}</p>
                <p>{product.Description}</p>
                <p class="no-line-height" onclick={clothingSizeDialog()}>
                    Size: 
                    <button class="button-secondary" style="margin-left: var(--padding); padding-inline: var(--padding)">help</button>
                    <dialog id="clothingSizeDialog">
                        <div class="size-recommend">
                            <form onsubmit="event.preventDefault()" novalidate>
                                <section class="step active">
                                    <h1 align="center">Basic Details</h1>
                                    <div class="input-group">
                                        <label for="gender">Gender</label>
                                        <select id="gender" required>
                                            <option value="">Select Gender</option>
                                            <option value="male">Male</option>
                                            <option value="female">Female</option>
                                        </select>
                                    </div>
                                    <div class="input-group">
                                        <label for="age">Age</label>
                                        <input type="number" id="age" placeholder="Age" required min="16" max="80" step="1">
                                    </div>
                                    <div class="input-group">
                                        <label for="height">Height (cm)</label>
                                        <input type="number" id="height" placeholder="Height (cm)" required min="140" max="200" step="1">
                                    </div>
                                    <div class="input-group">
                                        <label for="weight">Weight (kg)</label>
                                        <input type="number" id="weight" placeholder="Weight (kg)" required min="30" max="150" step="1">
                                    </div>
                                    <div class="button-container">
                                        <button  class="button-primary" onclick="nextStep()">Next</button>
                                        <button class="button-secondary" onclick={closeClothingSizeDialog()}>Close</button>
                                    </div>
                                </section>
                                <section class="step">
                                    <h1 align="center">Physical Attributes</h1>
                                    <div class="input-group">
                                        <label for="abdomen">Abdomen Shape</label>
                                        <select id="abdomen" required>
                                            <option value="">Abdomen Shape</option>
                                            <option value="flat">Flat</option>
                                            <option value="medium">Medium</option>
                                            <option value="building">Building</option>
                                        </select>
                                    </div>
                                    <div class="input-group">
                                        <label for="chest">Chest Shape</label>
                                        <select id="chest" required>
                                            <option value="">Chest Shape</option>
                                            <option value="narrow">Narrow</option>
                                            <option value="medium">Medium</option>
                                            <option value="wide">Wide</option>
                                        </select>
                                    </div>
                                    <div class="input-group">
                                        <label for="fitPreference">Fit Preference</label>
                                        <select id="fitPreference" required>
                                            <option value="">Fit Preference</option>
                                            <option value="very_fitted">Very Fitted</option>
                                            <option value="fitted">Fitted</option>
                                            <option value="normal">Normal</option>
                                            <option value="loose">Loose</option>
                                            <option value="very_loose">Very Loose</option>
                                        </select>
                                    </div>
                                    <div class="button-container">
                                        <button class="button-primary" onclick="handleCalculateSize(); nextStep()">Next</button>
                                        <button class="button-secondary" onclick="prevStep()">Previous</button>
                                        <button class="button-secondary" type="submit" onclick={closeClothingSizeDialog()}>Close</button>
                                    </div>
                                </section>
                                <section class="step">
                                    // <h1 align="center">Preferences</h1>
                                    <div class="result" id="result">
                                        <h3 id="recommendedSize">Recommended Size: </h3>
                                        <p id="baseSize">Base Size: </p>
                                    </div>
                                    <div class="button-container">
                                        <button class="button-primary" onclick="useRecommendedSize(); closeClothingSizeDialog()" >Use Recommended size</button>
                                        <button class="button-secondary" onclick="prevStep()">Previous</button>
                                        <button class="button-secondary" onclick={closeClothingSizeDialog()}>Close</button>
                                    </div>
                                </section>
                            </form>
                        </div>  
                    </dialog>
                </p>
            </span>
            <form name="item-order" hx-on::validation:validate="!document.querySelector('input[name=size]:checked') && document.querySelector('input[name=size]').reportValidity()">
                <div class="size-group">
                    if stock["s"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="s" name="size" value="s" disabled required>
                            <label for="small-size">S</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="s" name="size" value="s" required>
                            <label for="s">S</label>
                        </div>
                    }
                    if stock["m"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="m" name="size" value="m" disabled required>
                            <label for="small-size">M</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="m" name="size" value="m" required>
                            <label for="m">M</label>
                        </div>
                    }
                    if stock["l"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="l" name="size" value="l" disabled required>
                            <label for="small-size">L</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="l" name="size" value="l" required>
                            <label for="l">L</label>
                        </div>
                    }
                    if stock["xl"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="xl" name="size" value="xl" disabled required>
                            <label for="small-size">XL</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="xl" name="size" value="xl" required>
                            <label for="xl">XL</label>
                        </div>
                    }
                    if stock["xxl"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="xxl" name="size" value="xxl" disabled required>
                            <label for="small-size">XXL</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="xxl" name="size" value="xxl" required>
                            <label for="xxl">XXL</label>
                        </div>
                    }
                    if stock["xxxl"] == 0 {
                        <div class="radio-button out-of-stock">
                            <input type="radio" id="xxxl" name="size" value="xxxl" disabled required>
                            <label for="small-size">XXXL</label>
                        </div>
                    } else {
                        <div class="radio-button">
                            <input type="radio" id="xxxl" name="size" value="xxxl" required>
                            <label for="xxxl">XXXL</label>
                        </div>
                    }
                </div>
                <span>
                    <button 
                        id="buy-button"
                        class="button-primary" 
                        hx-include="closest form" 
                        hx-get={fmt.Sprintf("/order/%s", product.Id)} 
                        hx-target="body" hx-push-url={fmt.Sprintf("/order/%s", product.Id)} 
                        hx-validate="true"
                    >BUY</button>
                    <button 
                        id="cart-button" 
                        hx-include="closest form" 
                        hx-get={fmt.Sprintf("/add-to-cart/%s", product.Id)} 
                        hx-swap="none" hx-on::after-request="showToast('Product Added to your Cart', 'success')" 
                        class="button-secondary" 
                        hx-validate="true"
                    >Add to Cart</button>
                </span>
            </form>
            <br>
        </div>
        </div>
        <script defer>
            function checkAllSizesDisabled() {
                const sizeInputs = document.querySelectorAll('input[name="size"]');
                const allDisabled = Array.from(sizeInputs).every(input => input.disabled);
                
                const buyButton = document.getElementById('buy-button');
                const cartButton = document.getElementById('cart-button');
                
                if (allDisabled) {
                    buyButton.disabled = true;
                    cartButton.disabled = true;
                    
                    // Remove HTMX attributes to prevent interactions
                    buyButton.removeAttribute('hx-get');
                    buyButton.removeAttribute('hx-target');
                    buyButton.removeAttribute('hx-push-url');
                    cartButton.removeAttribute('hx-get');
                    cartButton.removeAttribute('hx-swap');
                    
                    buyButton.classList.add('disabled');
                    cartButton.classList.add('disabled');
                }
            }
            document.addEventListener('DOMContentLoaded', checkAllSizesDisabled);
            document.addEventListener('htmx:afterSettle', checkAllSizesDisabled);

            function handleCalculateSize() {
                const formData = {
                    gender: document.getElementById('gender').value,
                    age: parseInt(document.getElementById('age').value),
                    height: parseInt(document.getElementById('height').value),
                    weight: parseInt(document.getElementById('weight').value),
                    abdomen: document.getElementById('abdomen').value,
                    chest: document.getElementById('chest').value,
                    fitPreference: document.getElementById('fitPreference').value,
                };

                const result = calculateSize(formData);

                document.getElementById('result').style.display = 'block';
                document.getElementById('recommendedSize').innerText = `Recommended Size: ${result.recommendedSize}`;
                document.getElementById('baseSize').innerText = `Base Size: ${result.baseSize}`;
            }

            function validateStep(stepIndex) {
                const steps = document.querySelectorAll('.step');
                const inputs = steps[stepIndex].querySelectorAll('input, select');
                let isValid = true;

                for (const input of inputs) {
                    if (!input.checkValidity()) {
                        isValid = false;
                        input.classList.add('invalid');
                        input.addEventListener('input', () => input.classList.remove('invalid'), { once: true });
                    }
                }

                return isValid;
            }

            function useRecommendedSize() {
                const recommendedSize = document.getElementById('recommendedSize').textContent.replace('Recommended Size: ', '').trim().toLowerCase();

                const stock = {
                    s: document.querySelector('#s').disabled ? 0 : 1,
                    m: document.querySelector('#m').disabled ? 0 : 1,
                    l: document.querySelector('#l').disabled ? 0 : 1,
                    xl: document.querySelector('#xl').disabled ? 0 : 1,
                    xxl: document.querySelector('#xxl').disabled ? 0 : 1,
                    xxxl: document.querySelector('#xxxl').disabled ? 0 : 1
                };

                if (stock[recommendedSize] !== 0) {
                    const sizeRadioButton = document.querySelector(`input[name="size"][value="${recommendedSize}"]`);
                    if (sizeRadioButton) {
                        sizeRadioButton.checked = true;
                    }
                } else {
                    showToast("Recomended size is not available", "error")
                }
            }

            let currentStep = 0;

            function stepReset(){
                currentStep=0;
                showStep(0)
            }

            function showStep(stepIndex) {
                const steps = document.querySelectorAll('.step');
                steps.forEach((step, index) => {
                    step.classList.remove('active');
                    if (index === stepIndex) {
                        step.classList.add('active');
                    }
                });
            }

            function nextStep() {
                const steps = document.querySelectorAll('.step');
                if (validateStep(currentStep) && currentStep < steps.length - 1) {
                    currentStep++;
                    showStep(currentStep);
                }
            }

            function prevStep() {
                if (currentStep > 0) {
                    currentStep--;
                    showStep(currentStep);
                }
            }

            function closeClothingSizeDialog() {
                let dialog = document.getElementById("clothingSizeDialog");
                stepReset();
                dialog.close();
            }

                
        </script>
    }
}

script clothingSizeDialog() {
    let dialog = document.getElementById("clothingSizeDialog");
    dialog.showModal();
}
script closeClothingSizeDialog() {
    let dialog = document.getElementById("clothingSizeDialog");
    stepReset();
    dialog.close();
}

templ ImageCarousel(product models.Product) {
    <link rel="stylesheet" href="/static/styles/user/components/carousel.css">
    <div class="carousel-container">
        <div class="main-image-container">
            <img src={"/static/images/"+product.Id+"-main"} alt="Main Image" class="main-image" id="mainImage">
        </div>
        <div class="preview-panel">
            <button class="arrows prev">&#10094;</button>
            <div class="preview-container">
                <img src={"/static/images/"+product.Id+"-main"} alt="Preview 1" class="preview-image active">
                <img src={"/static/images/"+product.Id+"-1"} alt="Preview 2" class="preview-image">
                <img src={"/static/images/"+product.Id+"-2"} alt="Preview 3" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-3"} alt="Preview 4" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-4"} alt="Preview 5" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-5"} alt="Preview 6" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-6"} alt="Preview 7" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-7"} alt="Preview 8" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-8"} alt="Preview 9" class="preview-image" onerror="this.style.display='none';">
                <img src={"/static/images/"+product.Id+"-9"} alt="Preview 20" class="preview-image" onerror="this.style.display='none';">
            </div>
            <button class="arrows next">&#10095;</button>
        </div>
    </div>
    <script>
        (() => {
            const main = document.getElementById('mainImage');
            const container = document.querySelector('.carousel-container');
            let previews = [...document.querySelectorAll('.preview-image')];
            let current = 0;

            const update = (index) => {
                const visible = previews.filter(img => img.style.display !== 'none');
                if (!visible.length) return;
                current = ((index % visible.length) + visible.length) % visible.length;
                main.src = visible[current].src;
                previews.forEach((p, i) => p.classList.toggle('active', p === visible[current]));
            };

            previews.forEach(img => img.addEventListener('error', () => {
                img.style.display = 'none';
                update(current);
            }));

            container.addEventListener('click', e => {
                if (e.target.classList.contains('preview-image') && e.target.style.display !== 'none')
                    update(previews.indexOf(e.target));
                else if (e.target.classList.contains('arrows'))
                    update(current + (e.target.classList.contains('next') ? 1 : -1));
            });

            update(0);
        })();

    </script>
} 
