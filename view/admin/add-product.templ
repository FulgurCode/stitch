package admin

import (
    "github.com/FulgurCode/stitch/view/layout"
)

templ AdminAddProduct() {
    @layout.Admin() {
        <link rel="stylesheet" href="/static/styles/admin/item.css"/>
        <div class={Container(), innerScroll()}>
            <h1 style="align-self: start;">Add Product</h1>
            <div class="item-container">
                <form class="description-container" hx-post="/admin/product" hx-target="body" enctype="multipart/form-data">
                <div class="image">
                    <p class="no-line-height">Main Image:</p>
                    <section class="image-section" id="mainImageSection">
                        <label for="fileInput_main" class="upload-button">
                            <input type="file" id="fileInput_main" accept="image/*" style="position:absolute; opacity: 0" name="main-image" required>
                            <span>+</span>
                        </label>
                    </section>
                    <p class="no-line-height">Additional Images (Max 9):</p>
                    <section class="image-section" id="moreImagesSection">
                        <label for="fileInput_more" class="upload-button" id="moreImagesLabel" name="">
                            <input type="file" id="fileInput_more" accept="image/*" style="position:absolute; opacity: 0;" name="images" multiple required>
                            <span>+</span>
                        </label>
                    </section>
                    <div id="imageCounter">0 / 9 images</div>
                </div>

                    <p class="no-line-height">Title:</p>
                    <input type="text" style="font-weight: 600; font-size: 1.5rem;" placeholder="Title" name="name" required/>
                    <span style="gap: 2px;">
                        <p class="no-line-height">Price:</p>
                        <p style="margin: 0;"><input type="number" placeholder="price" name="price" required/> &#8360;.</p>
                        <p class="no-line-height">Description:</p>
                        <textarea name="description" placeholder="Description" id="auto-expand-textarea" required></textarea>
                        // <p class="no-line-height">Include Size:</p>
                    </span>
                    // <div class="size-group">
                    //     <div class="checkbox-button">
                    //         <input type="checkbox" id="small-size" name="size" value="S">
                    //         <label for="small-size">S</label>
                    //     </div>
                    //     <div class="checkbox-button">
                    //         <input type="checkbox" id="medium-size" name="size" value="M">
                    //         <label for="medium-size">M</label>
                    //     </div>
                    //     <div class="checkbox-button">
                    //         <input type="checkbox" id="large-size" name="size" value="L">
                    //         <label for="large-size">L</label>
                    //     </div>
                    //     <div class="checkbox-button">
                    //         <input type="checkbox" id="extra-large-size" name="size" value="XL">
                    //         <label for="extra-large-size">XL</label>
                    //     </div>
                    // </div>

                    <p class="no-line-height">Category:</p>
                    <div class="category-group">
                        <div class="radio-button">
                            <input type="radio" id="shirt" name="category" value="shirt">
                            <label for="shirt">shirt</label>
                        </div>
                        <div class="radio-button">
                            <input type="radio" id="t-shirt" name="category" value="t-shirt">
                            <label for="t-shirt">t-shirt</label>
                        </div>
                        <div class="radio-button">
                            <input type="radio" id="pants" name="category" value="pants">
                            <label for="pants">pants</label>
                        </div>
                    </div>
                    <input type="submit" class="button-primary" style="margin-top: var(--padding-inner)" value="Add Product">
                </form>

            </div>
        </div>
        <script>
        document.addEventListener('DOMContentLoaded', () => {
            const textarea = document.getElementById('auto-expand-textarea');

            const adjustHeight = () => {
                textarea.style.height = 'auto'; // Reset height to auto to shrink if needed
                textarea.style.height = `${textarea.scrollHeight}px`; // Set height to the scrollHeight
            };

            textarea.addEventListener('input', adjustHeight);

            // Initial adjustment to handle pre-filled content
            adjustHeight();
        });

        const MAX_ADDITIONAL_IMAGES = 9;

        function handleFileSelect(event, sectionId) {
            const files = event.target.files;
            const section = document.getElementById(sectionId);
            const uploadButton = section.querySelector('.upload-button');

            if (sectionId === 'mainImageSection') {
                // Remove existing preview for main image
                const existingImg = section.querySelector('img');
                if (existingImg) {
                    section.removeChild(existingImg);
                }
                
                if (files.length > 0) {
                    const file = files[0];
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const newImg = document.createElement('img');
                        newImg.src = e.target.result;
                        newImg.alt = "Uploaded image";
                        section.insertBefore(newImg, uploadButton);
                    }
                    reader.readAsDataURL(file);
                }
            } else if (sectionId === 'moreImagesSection') {
                // Remove all existing previews
                const existingImgs = section.querySelectorAll('img');
                existingImgs.forEach(img => section.removeChild(img));
                
                const filesToAdd = Math.min(MAX_ADDITIONAL_IMAGES, files.length);
                
                for (let i = 0; i < filesToAdd; i++) {
                    const file = files[i];
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const newImg = document.createElement('img');
                        newImg.src = e.target.result;
                        newImg.alt = "Uploaded image";
                        section.insertBefore(newImg, uploadButton);
                    }
                    reader.readAsDataURL(file);
                }
                updateImageCounter(filesToAdd);
            }
        }

        function updateImageCounter(count) {
            const counter = document.getElementById('imageCounter');
            counter.textContent = `${count} / ${MAX_ADDITIONAL_IMAGES} images`;
        }

        document.getElementById('fileInput_main').addEventListener('change', function(event) {
            handleFileSelect(event, 'mainImageSection');
        });

        document.getElementById('fileInput_more').addEventListener('change', function(event) {
            handleFileSelect(event, 'moreImagesSection');
        });
        
        </script>
    }
}